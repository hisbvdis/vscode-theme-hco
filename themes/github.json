{
	"$schema": "vscode://schemas/color-theme",
	"type": "light",
	"name": "HCO-light-saturated",
	"colors": {
		// ======================================================
		// BACKGROUND
		// ======================================================
		// Editor
		"editor.background": "#f0f0f0",
		// Sidebar
		"sideBar.background": "#f0f0f0",
		// Tabs
		"tab.activeBackground": "#f0f0f0",
		// ======================================================
		// FOREGROUND
		// ======================================================
		"editor.foreground": "#24292e",

		// ======================================================
		// TABS
		// ======================================================
		// Inactive tab
		"tab.inactiveBackground": "#d9d9d9",
		// Tabs bar background
		"editorGroupHeader.tabsBackground": "#cfcfcf",
		// ======================================================
		// SIDEBAR
		// ======================================================
		// Active tab
		"sideBar.border": "#C7C7C7",
		// ======================================================
		// BRACKETS AND BRACKET GUIDES
		// ======================================================
		"editorBracketHighlight.foreground1": "#24292e",
		"editorBracketHighlight.foreground2": "#24292e",
		"editorBracketHighlight.foreground3": "#24292e",
		"editorBracketHighlight.foreground4": "#24292e",
		"editorBracketPairGuide.activeBackground1": "#000000",
		"editorBracketPairGuide.activeBackground2": "#000000",
		"editorBracketPairGuide.activeBackground3": "#000000",
		"editorBracketPairGuide.activeBackground4": "#000000"
	},
	"tokenColors": [
		{
			"scope": [
				// Comments
				"comment"
			],
			"settings": {
				"foreground": "#9e9e9e"
			}
		},
		{
			"scope": [
				// 
				"meta.object-literal.key"
			],
			"settings": {
				// "foreground": "#78909C"
				// "foreground": "#987252"
				// "foreground": "#856347"
			}
		},
		{
			"scope": [
				// JSON property key
				"support.type.property-name.json",
				// Variables inside the template string
				"meta.embedded",
				// Markdown: commands flags
				"constant.other.option",
				// CSS property name
				"meta.property-name support.type",
				// BAD: replaces "function" highlighting
				// "variable.other",
				// HTML angel brackets
				"punctuation.definition.tag"
			],
			"settings": {
				"foreground": "#24292e"
			}
		},
		{
			"scope": [
				// const, let, function
				"storage",
				// new, typeof,
				"keyword",
				// true/false
				"constant.language",
				// First and last curly braces of variable inside template string
				"punctuation.definition.template-expression.begin",
				"punctuation.definition.template-expression.end",
				// Optional operator "?"
				"punctuation.accessor.optional",
				// Arrow function's "arrow" character
				"storage.type.function.arrow"
			],
			"settings": {
				"foreground": "#d73a49"
			}
		},
		{
			"scope": [
				// User function name
				"entity.name.function",
				// CSS func
				"support.function"
			],
			"settings": {
				// "foreground": "#3699ba"
				"foreground": "#6f42c1"
			}
		},
		{
			"scope": [
				// return, import, if/else
				"keyword.control"
			],
			"settings": {
				// "foreground": "#942dc8"
			}
		},
		{
			"scope": [
				// HTML tags
				"entity.name.tag",
				// JSX tags
				"support.class.component"
			],
			"settings": {
				// "foreground": "#c70021"
			}
		},
		{
			"scope": [
				// Attributes
				"entity.other.attribute-name"
			],
			"settings": {
				// "foreground": "#ec93a2"
			}
		},
		{
			"scope": [
				// Strings
				"string",
				// Markdown: Code in backticks
				"markup.inline.raw"
			],
			"settings": {
				"foreground": "#44922a"
			}
		},
		{
			"scope": ["constant.numeric", "keyword.other.unit"],
			"settings": {
				// "foreground": "#0451a5"
			}
		},
		{
			"scope": [
				// Markdown: Heading
				"markup.heading",
				// HTML: Escape sequence (&nbsp;)
				"constant.character"
			],
			"settings": {
				// "foreground": "#a21319"
			}
		},
		{
			"scope": ["variable.object.property"],
			"settings": {
				// "foreground": "#b55908"
			}
		},
		{
			"scope": [
				// primitives
				"support.type",
				// Generic parameters
				// - bad:  highlights "class" and others
				// - good: highlights "interfaces" in code popups
				// "entity.name.type",
				// Return type:
				// - good: sets color to the type assignment of the "class" without color
				"meta.return.type entity.name.type",
				"meta.type.annotation entity.name.type",
				"meta.type.parameters entity.name.type"
			],
			"settings": {
				// "foreground": "#92870c"
			}
		},
		{
			"scope": [
				// const, let, function
				// "storage",
				// JSX tags
				// "support.class.component",
				// HTML tags
				// "entity.name.tag",
				// Markdown: Heading
				"markup.heading",
				// Markdown: Bold
				"markup.bold"
			],
			"settings": {
				"fontStyle": "bold"
			}
		},
		{
			"scope": [
				// return, import, if/else
				"keyword.control",
				// Comments
				"comment",
				// Markdown: italic formatting
				"markup.italic"
			],
			"settings": {
				"fontStyle": "italic"
			}
		},
		{
			"scope": [
				// async, extends, public, readonly
				// "storage.modifier",
				// Arrow function's "arrow" character
				"storage.type.function.arrow"
			],
			"settings": {
				"fontStyle": ""
			}
		}
	],
	"semanticHighlighting": true,
	"semanticTokenColors": {
		// TS: interface type
		// "interface": "#92870c",
		// TS: generic parameters
		// "typeParameter": "#92870c",
		// Function parameters
		"parameter.declaration": "#e36209"
	}
}
