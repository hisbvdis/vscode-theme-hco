{
  "$schema": "vscode://schemas/color-theme",
  "type": "light",
  "name": "HCO-light-saturated",
  "include": "./default/light_modern.json",
  "colors": {
    // ======================================================
    // BACKGROUND
    // ======================================================
    // Editor background
    "editor.background": "#f2f2f2",
    // Sidebar background
    "sideBar.background": "#f2f2f2",
    // Tabs background
    "tab.activeBackground": "#f2f2f2",
    // Terminal background
    "panel.background": "#f2f2f2",
    // ======================================================
    // FOREGROUND
    // ======================================================
    "editor.foreground": "#0C0A09",
    // ======================================================
    // TABS
    // ======================================================
    // Inactive tab
    "tab.inactiveBackground": "#d9d9d9",
    // Tabs bar background
    "editorGroupHeader.tabsBackground": "#cfcfcf",
    // Inactive tab's text
    "tab.inactiveForeground": "#333333b3",
    // ======================================================
    // BORDERS
    // ======================================================
    "sideBar.border": "#C7C7C7",
    "panel.border": "#C7C7C7",
    // ======================================================
    // SELECTION
    // ======================================================
    "editor.selectionBackground": "#a8d4ff",
    "editor.selectionHighlightBackground": "#a8d4ff70",
    // ======================================================
    // BRACKETS AND BRACKET GUIDES
    // ======================================================
    // HTML scope ruler
    "editorIndentGuide.activeBackground1": "#0C0A09",
    "editorBracketHighlight.foreground1": "#0C0A09",
    "editorBracketHighlight.foreground2": "#0C0A09",
    "editorBracketHighlight.foreground3": "#0C0A09",
    "editorBracketHighlight.foreground4": "#0C0A09",
    "editorBracketPairGuide.activeBackground1": "#0C0A09",
    "editorBracketPairGuide.activeBackground2": "#0C0A09",
    "editorBracketPairGuide.activeBackground3": "#0C0A09",
    "editorBracketPairGuide.activeBackground4": "#0C0A09",
  },
  "tokenColors": [
    {
      "scope": [
        // Comments
        "comment"
      ],
      "settings": {
        "foreground": "#9e9e9e"
      }
    },
    {
      "scope": [
        // JSON property key
        "support.type.property-name.json",
        // Variables inside the template string
        "meta.embedded",
        // Markdown: commands flags
        "constant.other.option",
        // CSS property name
        "meta.property-name support.type",
        // HTML angel brackets
        "punctuation.definition.tag",
        // C#: variables inside strings
        "meta.expression",
      ],
      "settings": {
        "foreground": "#0C0A09"
      }
    },
    {
      "scope": [
        // const, let, function
        "storage",
        // new, typeof,
        "keyword",
        // Optional operator "?"
        "punctuation.accessor.optional",
        // new
        "keyword.operator.new",
        // typeof
        "keyword.operator.expression",
        // First and last curly braces of variable inside template string
        "punctuation.definition.template-expression.begin",
        "punctuation.definition.template-expression.end",
        // Classes: this, super()
        "variable.language",
      ],
      "settings": {
        "foreground": "#0000e0" /* Light */
      }
    },
    {
      "scope": [
        // User function name
        "entity.name.function",
        // CSS func
        "support.function",
        // new Promise()
        // "meta.function-call support.class",
        // Classes: override "entity.name.type"
        // "entity.name.type.class",
        //
        "entity.other.inherited-class",
      ],
      "settings": {
        // "foreground": "#379cbe" /* Origin - Backup */
        "foreground": "#1195b6" /* Light */
      }
    },
    {
      "scope": [
        // return, import, if/else
        "keyword.control",
      ],
      "settings": {
        "foreground": "#9b61d1" /* Light */
      }
    },
    {
      "scope": [
        // HTML tags
        "entity.name.tag",
        // JSX tags
        "support.class.component"
      ],
      "settings": {
        "foreground": "#b30000" /* Light */
      }
    },
    {
      "scope": [
        // Attributes
        "entity.other.attribute-name"
      ],
      "settings": {
        "foreground": "#ce8b7e" /* Light */
      }
    },
    {
      "scope": [
        // Strings
        "string",
        // Markdown: Code in backticks
        "markup.inline.raw"
      ],
      "settings": {
        "foreground": "#3d922a" /* Light */
      }
    },
    {
      "scope": [
        // Numbers / Digits
        "constant.numeric",
        "keyword.other.unit",
        // true/false
        "constant.language",
      ],
      "settings": {
        "foreground": "#0451a5"
      }
    },
    {
      "scope": [
        // Markdown: Heading
        "markup.heading",
        // Markdown: Code inside heading
        "markup.heading markup.inline.raw",
        // HTML: Escape sequence (&nbsp;)
        "constant.character"
      ],
      "settings": {
        "foreground": "#a21319"
      }
    },
    {
      "scope": [
        // All types???
        // "entity.name.type",
        // primitives
        "support.type",
        // Return type:
        "meta.return.type entity.name.type",
        "meta.type.annotation entity.name.type",
        "meta.type.parameters entity.name.type",
        // Enum as a type definition
        // "meta.type.annotation entity.name.type.enum",
        // TS: Interface declaration
        "entity.name.type.interface",
      ],
      "settings": {
        "foreground": "#9e9315"
      }
    },
    {
      "scope": [
        // const, let, function
        // "storage",
        // HTML tags
        // "entity.name.tag",
        // JSX tags
        // "support.class.component",
        // Markdown: Heading
        "markup.heading",
        // Markdown: Bold
        "markup.bold"
      ],
      "settings": {
        "fontStyle": "bold"
      }
    },
    {
      "scope": [
        // return, import, if/else
        "keyword.control",
        // Comments
        "comment",
        // Markdown: italic formatting
        "markup.italic"
      ],
      "settings": {
        "fontStyle": "italic"
      }
    }
  ],
  "semanticHighlighting": true,
  "semanticTokenColors": {
    // TS: interface type
    "interface": "#9e9315",
    // TS: generic parameters
    "typeParameter": "#9e9315",
    // TS: Date, Math
    "class.defaultLibrary": "#2595b1",
    "class.declaration": "#2595b1",
    // Parameters
    "parameter.declaration": "#b56d08",
  }
}
